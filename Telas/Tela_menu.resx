<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6AAAAABJRU5ErkJggg==
</value>
  </data>
</root>